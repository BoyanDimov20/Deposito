// <auto-generated />
using System;
using Deposito.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Deposito.DB.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240414092346_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("Deposito.DB.Models.Bank", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("IconUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Banks");
                });

            modelBuilder.Entity("Deposito.DB.Models.Deposit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("MaximumAmount")
                        .HasColumnType("REAL");

                    b.Property<double>("MinimalAmount")
                        .HasColumnType("REAL");

                    b.Property<DateOnly?>("PayoutDay")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BankId");

                    b.ToTable("Deposits");
                });

            modelBuilder.Entity("Deposito.DB.Models.Interest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("DepositId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Percent")
                        .HasColumnType("REAL");

                    b.Property<int>("PeriodInMonths")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DepositId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("Deposito.DB.Models.Deposit", b =>
                {
                    b.HasOne("Deposito.DB.Models.Bank", "Bank")
                        .WithMany("Deposits")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("Deposito.DB.Models.Interest", b =>
                {
                    b.HasOne("Deposito.DB.Models.Deposit", "Deposit")
                        .WithMany("Interests")
                        .HasForeignKey("DepositId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Deposit");
                });

            modelBuilder.Entity("Deposito.DB.Models.Bank", b =>
                {
                    b.Navigation("Deposits");
                });

            modelBuilder.Entity("Deposito.DB.Models.Deposit", b =>
                {
                    b.Navigation("Interests");
                });
#pragma warning restore 612, 618
        }
    }
}
